#!/usr/bin/env python
#
#  Copyright (c) 2001, Tweak Films
#  Copyright (c) 2008, Tweak Software
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#     * Redistributions of source code must retain the above
#       copyright notice, this list of conditions and the following
#       disclaimer.
#
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials
#       provided with the distribution.
#
#     * Neither the name of the Tweak Software nor the names of its
#       contributors may be used to endorse or promote products
#       derived from this software without specific prior written
#       permission.
# 
#  THIS SOFTWARE IS PROVIDED BY Tweak Software ''AS IS'' AND ANY EXPRESS
#  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL Tweak Software BE LIABLE FOR
#  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
#  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
#  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#  DAMAGE.
#
#
#   Copy package project distribution targets 

import buildTools
import os
import sys
import re

if buildTools.isProjectDirectory("."):
    buildTools.verbose = 0
    #p = buildTools.Project()
    #p.loadProjectInfo(".")
    #p.loadProjectDAG()
    p = buildTools.loadCachedProjectDAG()
    buildTools.verbose = 1
    projects = [p]
elif buildTools.isPackageDirectory("."):
    buildTools.verbose = 0
    p = buildTools.Package(".")
    buildTools.verbose = 1
    projects = p.rootProjects()
else:
    buildTools.error("Not a project or package")
    sys.exit(-1)

#
# This regex is used for stripping the 
# "_sw_mac" bit in "rvio_sw_mac" for distribution.
# It will be applied to any file with such
# a suffix in its filename.
#
re_sw_mac = re.compile('_sw_mac$')
for i in projects:
    target = i.root.target
    dir = os.path.dirname(target)
    basename = os.path.basename(target)
    files = os.listdir(dir)
    refile = re.compile(basename + "\.bin")
    for f in files:
        if refile.search(f) != None:
            os.system("cp %s %s" % (dir + "/" + f, sys.argv[1]))
	    if (os.path.exists("%s.manifest" % (dir + "/" + f))):
                os.system("cp %s.manifest %s" % (dir + "/" + f, sys.argv[1]))
            break
    if os.path.exists(target):
        if os.path.isdir(sys.argv[1]):
            targetWithNo_mac = re.sub(re_sw_mac, "", basename)
            destFile =  sys.argv[1] + os.path.sep + targetWithNo_mac
            if target != destFile:
                os.system("cp %s %s" % (target, destFile))
        else:
            targetWithNo_mac = re.sub(re_sw_mac, "", sys.argv[1])
            os.system("cp %s %s" % (target, targetWithNo_mac))
            
    if (os.path.exists("%s.manifest" % target)):
        os.system("cp %s.manifest %s" % (target, sys.argv[1]))
        

# Local Variables:
# mode: python
# end:
