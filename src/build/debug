#!/usr/bin/env python
#
#  Copyright (c) 2001, Tweak Films
#  Copyright (c) 2008, Tweak Software
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#     * Redistributions of source code must retain the above
#       copyright notice, this list of conditions and the following
#       disclaimer.
#
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials
#       provided with the distribution.
#
#     * Neither the name of the Tweak Software nor the names of its
#       contributors may be used to endorse or promote products
#       derived from this software without specific prior written
#       permission.
# 
#  THIS SOFTWARE IS PROVIDED BY Tweak Software ''AS IS'' AND ANY EXPRESS
#  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL Tweak Software BE LIABLE FOR
#  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
#  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
#  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#  DAMAGE.
#
#
#   Run a shell command on each library in build order
#   you can run a program like this:
#
#       run arg1 arg2 arg3
#
#   in which case run execs the project target with the arguments or
#   you can do this: 
#
#       run :PROGRAM arg1 arg2 arg3
#
#   in which case run execs PROGRAM with the arguments.
# 
#   Run checks the current directory to discover the project files,
#   unless "--p <dir>" is the first pair of args, in which case run
#   looks in <dir>.
#

import buildTools
import os
import sys
import string

program = ""

cwd = "."

if len(sys.argv) > 2:
    if (sys.argv[1] == "--p") :
        cwd = sys.argv[2]
        del sys.argv[1]
        del sys.argv[1]

if not buildTools.isProjectDirectory(cwd):
    buildTools.error("not a project directory (nothing to run)")
    sys.exit(-1)

buildTools.verbose = 0
p = None
if cwd == ".":
    p = buildTools.loadCachedProjectInfo()
else:
    p = buildTools.Project()
    p.loadProjectInfo(cwd)
buildTools.verbose = 1

try:
    ldpath = os.environ["LD_LIBRARY_PATH"].split(":")
except:
    ldpath = []

ldpath.insert(0, p.build_root + "/lib");
nldpath = string.join(ldpath, ":")
buildTools.info("LD_LIBRARY_PATH=" + nldpath)
os.environ["LD_LIBRARY_PATH"] = nldpath

if len(sys.argv) > 1:
    if len(sys.argv[1]) > 0:
        if sys.argv[1][0] != "-":
            program = p.build_root + "/bin/" + sys.argv[1]
            del sys.argv[1]

if program == "":
    program = p.root.target

debugger = os.getenv("DEBUGGER", p.debugger)
sys.argv[0] = debugger
sys.argv.insert(1,program)

buildTools.info("running " + string.join(sys.argv))
if (sys.argv[0] == "gdb") :
    sys.argv[0] = "/usr/bin/gdb"
print sys.argv
os.execv(sys.argv[0],sys.argv)

# Local Variables:
# mode: python
# end:
