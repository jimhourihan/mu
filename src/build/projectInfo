#!/usr/bin/env python
#
#  Copyright (c) 2001, Tweak Films
#  Copyright (c) 2008, Tweak Software
# 
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#     * Redistributions of source code must retain the above
#       copyright notice, this list of conditions and the following
#       disclaimer.
#
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials
#       provided with the distribution.
#
#     * Neither the name of the Tweak Software nor the names of its
#       contributors may be used to endorse or promote products
#       derived from this software without specific prior written
#       permission.
# 
#  THIS SOFTWARE IS PROVIDED BY Tweak Software ''AS IS'' AND ANY EXPRESS
#  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL Tweak Software BE LIABLE FOR
#  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
#  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
#  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
#  DAMAGE.
#
#
#   Print out project dependancies
# 
#   options:
#   -projectpaths : prints out the project paths in the build order
#                   This is used by 'make rebuild'
#

import buildTools
import os
import sys

if buildTools.isProjectDirectory("."):
    buildTools.verbose = 0
    p = buildTools.loadCachedProjectDAG()
    buildTools.verbose = 1
    targets = p.projectsInBuildOrder()
elif buildTools.isPackageDirectory("."):
    buildTools.verbose = 0
    p = buildTools.Package(".")
    buildTools.verbose = 1
    targets = p.projectsInBuildOrder()
else:
    buildTools.error("Not a project or package")
    sys.exit(-1)


if len(sys.argv)>1 and sys.argv[1] == '-projectpaths':
    for t in targets:
        print t.path
else:
    print "Projects in build order:"
    for t in targets:
        print t.name

    if buildTools.isProjectDirectory("."):
        if p.modules != []:
            print ""
            print "Modules:"
            for t in p.modules:
                print t.name

# Local Variables:
# mode: python
# end:
